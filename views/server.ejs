<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="css/server.css">
        <link rel="icon" href="images/favicon.png" type="image/png">
        <title>Smoothie King</title>
    </head>
    <body>
        <div class="main-header-container">
            <img src="images/smoothie-king-logo.png" style="width:400px; height:70px;" id="logo">
            <!--SIGN OUT BUTTON-->
            <button id="sign-out-button"    >
                <img src="images/sign-out-button.png" style="width:70px; height:70px">
            </button>
            
        </div>

        <div class="main-grid-container">
            <div class="grid-item sub-heading-container">
                <h1>Order Summary</h1>
                <table>
                    <thead>
                        <tr>
                            <th>Item</th>
                            <th>Price</th>
                        </tr>
                    </thead>
                    <tbody id = "order-summary"></tbody>
                </table>
            </div>

            <div class="grid-item sub-heading-container">
                <h1>Menu</h1>
            </div>

            <div class="grid-item order-items-container">
                <div class="sub-grid-item order-item-list">
                    <!--TABLE/VIEW OF ORDER ITEMS-->
                        <!--DELETE ITEM BUTTON-->
                </div>
                <div class="sub-grid-item lower-panel">
                    <form id = "update" method = "post" action = "/">
                        <div id="hiddenValues">
                            <h1 id="total-label" name = "total">0.00</h1>
                            <input type="hidden" name="price" id="price"> 
                        </div>
                        <div id="buttons-container">
                            <button name = "pay_button" type = "submit">Pay Now</button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="grid-item menu-item-container">
                <div class="sub-grid-item" id="category-container">
                    <button class="active">Featured</button>
                    <button>Feel Energized</button>
                    <button>Manage Weight</button>
                    <button>Get Fit</button>
                    <button>Be Well</button>
                    <button>Enjoy a Treat</button>
                    <button>Snacks</button>
                </div>
                <div class="sub-grid-item menu-item-list"></div>
            </div>

        </div>

        <!-- SCRIPT TO SWITCH CATEGORIES-->
        <script>

        
        const clearButton = document.createElement('button');
        clearButton.id = 'clear-items-button'; // Add an id to the button
        clearButton.innerText = 'Clear Items';
        clearButton.addEventListener('click', clearOrder);
        document.getElementById('buttons-container').appendChild(clearButton);

        function loadMenuItems(category) {
            fetch(`/menu-items?category=${category}`)
            .then(response => response.json())
            .then(data => {
                const menuItems = {};
                const menuItemsContainer = document.querySelector(".menu-item-list");
                menuItemsContainer.innerHTML = '';

                const addToOrder = (item, price) => {
                    const orderTable = document.getElementById('order-summary');
                    const orderTotal = document.getElementById('total-label');
                    let total = parseFloat(orderTotal.innerText.replace('Total: $', ''));
                    total += price;
                    orderTotal.innerText = `Total: $${total.toFixed(2)}`;

                    const row = document.createElement('tr');
                    const itemCell = document.createElement('td');
                    const priceCell = document.createElement('td');
                    const removeButtonCell = document.createElement('td'); 
                    const removeButton = document.createElement('button');
                    removeButton.classList.add('remove-from-order');
                    removeButton.innerText = 'Remove';

                    // Add the event listener to the removeButton
                    removeButton.addEventListener('click', function() {
                        const row = this.parentNode.parentNode;
                        const itemPrice = parseFloat(row.querySelector('.price').innerText.replace('$', ''));
                        let total = parseFloat(document.getElementById('total-label').innerText.replace('Total: $', ''));
                        total -= itemPrice;
                        document.getElementById('total-label').innerText = `Total: $${total.toFixed(2)}`;
                        row.remove();
                    });

                    removeButtonCell.appendChild(removeButton);

                    itemCell.innerText = item;
                    priceCell.innerText = `$${price.toFixed(2)}`;
                    row.appendChild(itemCell);
                    row.appendChild(priceCell);
                    row.appendChild(removeButtonCell); 
                    orderTable.appendChild(row);

                    var total_price = document.getElementById("price");
                    total_price.setAttribute("value", total)

                    const hiddenValues = document.getElementById("hiddenValues");
                    hiddenValues.innerHTML += "<input type='hidden', name = 'hiddenPrice', id = 'hiddenPrice', value = '" + price + "'>"
                    hiddenValues.innerHTML += "<input type='hidden', name = 'hiddenItem', id = 'hiddenItem', value = '" + item + "'>"
                    
                };

                data.forEach(item => {
                const menuItemId = item.menu_item_id;
                const menuItemName = menuItemId.replace(/\s\d+$/, '');

                if (!menuItems.hasOwnProperty(menuItemName)) {
                    const menuItemBox = document.createElement('div');
                    menuItemBox.classList.add('menu-item');

                    const menuItemNameContainer = document.createElement('div');
                    menuItemNameContainer.classList.add('menu-item-name');
                    menuItemBox.appendChild(menuItemNameContainer);

                    const menuItemSizeContainer = document.createElement('div');
                    menuItemSizeContainer.classList.add('menu-item-size');
                    menuItemBox.appendChild(menuItemSizeContainer);

                    menuItemsContainer.appendChild(menuItemBox);

                    menuItems[menuItemName] = {
                        box: menuItemBox,
                        sizes: {}
                    };

                    menuItemNameContainer.innerText = menuItemName;
                }

                if (category !== 'snacks') { // Check if category is not snacks
                    const menuItemSize = menuItemId.substring(menuItemId.length - 2);

                    if (!menuItems[menuItemName].sizes.hasOwnProperty(menuItemSize)) {
                        const menuItemSizeButton = document.createElement('button');
                        menuItemSizeButton.classList.add('add-to-order');
                        menuItemSizeButton.setAttribute('data-name', menuItemId);
                        menuItemSizeButton.setAttribute('data-price', item.price);
                        menuItemSizeButton.innerText = menuItemSize;
                        menuItemSizeButton.addEventListener('click', (event) => {
                            const item = event.target.getAttribute('data-name');
                            const price = parseFloat(event.target.getAttribute('data-price'));
                            addToOrder(item, price);
                        });

                        menuItems[menuItemName].sizes[menuItemSize] = menuItemSizeButton;
                        menuItems[menuItemName].box.querySelector('.menu-item-size').appendChild(menuItemSizeButton);
                    }
                } 
                else { // For snacks category, add a default "add" button
                    const menuItemAddButton = document.createElement('button');
                    menuItemAddButton.classList.add('add-to-order');
                    menuItemAddButton.setAttribute('data-name', menuItemId);
                    menuItemAddButton.setAttribute('data-price', item.price);
                    menuItemAddButton.innerText = 'Add';
                    menuItemAddButton.addEventListener('click', (event) => {
                        const item = event.target.getAttribute('data-name');
                        const price = parseFloat(event.target.getAttribute('data-price'));
                        addToOrder(item, price);
                    });

                    menuItems[menuItemName].sizes['add'] = menuItemAddButton;
                    menuItems[menuItemName].box.querySelector('.menu-item-size').appendChild(menuItemAddButton);
                }
            });
                
        });
    }


    function clearOrder() {
        const orderTable = document.getElementById('order-summary');
        orderTable.innerHTML = '';
        document.getElementById('total-label').innerText = 'Total: $0.00';
    }


    document.querySelectorAll("#category-container button").forEach(button => {
        button.addEventListener("click", (event) => {
            // Remove the 'active' class from all buttons
            document.querySelectorAll("#category-container button").forEach(btn => {
                btn.classList.remove("active");
            });

            // Add the 'active' class to the clicked button
            event.target.classList.add("active");
            
            const category = event.target.textContent.toLowerCase();
            loadMenuItems(category);
        });
    });

    // load featured by default
    loadMenuItems("featured");
</script>